# Generated by Django 4.2.5 on 2023-10-19 19:10

from django.db import migrations
from report.models import Account, TransactionAction

def seed_data(apps, schema_editor):
    #Main Accounts
    assets = Account.objects.filter(name="Assets").first()
    revenue = Account.objects.filter(name="Revenue").first()
    liabilities = Account.objects.filter(name="Liabilities").first()
    expenses = Account.objects.create(
        name="Expenses",
        type="expenses",
    )

    #Child Accounts
    cash_account_default = Account.objects.create(
        name="Cash Account (Default)",
        type="assets",
        parent_acc=assets
    )

    revenue_account_user = Account.objects.create(
        name="Revenue Account (User Defined)",
        type="revenue",
        parent_acc=revenue
    )
    interest_income = Account.objects.create(
        name="Interest Income",
        type="revenue",
        parent_acc=revenue
    )
    unearned_revenue = Account.objects.create(
        name="Unearned Revenue",
        type="liabilities",
        parent_acc=liabilities
    )
    shipping_expense = Account.objects.create(
        name="Shipping Expense",
        type="expenses",
        parent_acc=expenses
    )
    
    cash_account = Account.objects.filter(name="Cash Account").first()
    sales_revenue = Account.objects.filter(name="Sales Revenue").first()
    cost_of_sales_inventory = Account.objects.filter(name="Cost of Sales (Inventory)").first()
    cost_of_sales_dropshipping = Account.objects.filter(name="Cost of Sales (Dropshipping)").first()
    inventory = Account.objects.filter(name="Inventory").first()
    account_receivables = Account.objects.filter(name="Account Receivables").first()
    account_payable = Account.objects.filter(name="Account Payable").first()

    #Actions
    #1
    TransactionAction.objects.create(
        name="Sales Revenue (Self Defined)",
        sales_title="Direct Sales with Inventory",
        payment="Cash",
        model="SalesLineItems",
        datafield="total_price",
        account=cash_account_default,
        operation=1
    )
    TransactionAction.objects.create(
        name="Sales Revenue (Self Defined)",
        sales_title="Direct Sales with Inventory",
        payment="Cash",
        model="Product",
        account=cost_of_sales_inventory,
        operation=1
    )
    TransactionAction.objects.create(
        name="Sales Revenue (Self Defined)",
        sales_title="Direct Sales with Inventory",
        payment="Cash",
        model="SalesLineItems",
        datafield="total_price",
        account=sales_revenue,
        operation=0
    )
    TransactionAction.objects.create(
        name="Sales Revenue (Self Defined)",
        sales_title="Direct Sales with Inventory",
        payment="Cash",
        model="Product",
        account=inventory,
        operation=0
    )

    #2
    TransactionAction.objects.create(
        name="Sales Revenue (Self Defined)",
        sales_title="Direct Sales with Inventory",
        payment="Credit",
        model="SalesLineItems",
        datafield="total_price",
        account=account_receivables,
        operation=1
    )
    TransactionAction.objects.create(
        name="Sales Revenue (Self Defined)",
        sales_title="Direct Sales with Inventory",
        payment="Credit",
        model="Product",
        account=cost_of_sales_inventory,
        operation=1
    )
    TransactionAction.objects.create(
        name="Sales Revenue (Self Defined)",
        sales_title="Direct Sales with Inventory",
        payment="Credit",
        model="SalesLineItems",
        datafield="total_price",
        account=sales_revenue,
        operation=0
    )
    TransactionAction.objects.create(
        name="Sales Revenue (Self Defined)",
        sales_title="Direct Sales with Inventory",
        payment="Credit",
        model="Product",
        account=inventory,
        operation=0
    )

    #3
    TransactionAction.objects.create(
        name="Sales Revenue (Self Defined)",
        sales_title="Direct Sales without Inventory",
        payment="Cash",
        model="SalesLineItems",
        datafield="total_price",
        account=cash_account_default,
        operation=1
    )
    TransactionAction.objects.create(
        name="Sales Revenue (Self Defined)",
        sales_title="Direct Sales without Inventory",
        payment="Cash",
        model="Product",
        account=cost_of_sales_dropshipping,
        operation=1
    )
    TransactionAction.objects.create(
        name="Sales Revenue (Self Defined)",
        sales_title="Direct Sales without Inventory",
        payment="Cash",
        model="SalesLineItems",
        datafield="total_price",
        account=sales_revenue,
        operation=0
    )

    #4
    TransactionAction.objects.create(
        name="Sales Revenue (Self Defined)",
        sales_title="Direct Sales without Inventory",
        payment="Credit",
        model="SalesLineItems",
        datafield="total_price",
        account=account_receivables,
        operation=1
    )
    TransactionAction.objects.create(
        name="Sales Revenue (Self Defined)",
        sales_title="Direct Sales without Inventory",
        payment="Credit",
        model="SalesLineItems",
        datafield="total_price",
        account=sales_revenue,
        operation=0
    )

    #Revenue Name
    #5
    TransactionAction.objects.create(
        name="Revenue name (investment)",
        sales_title="Investment Initial Setup",
        payment="Investment Initial Setup",
        model="SalesLineItems",
        datafield="total_price",
        account=revenue_account_user,
        operation=1
    )
    TransactionAction.objects.create(
        name="Revenue name (investment)",
        sales_title="Investment Initial Setup",
        payment="Investment Initial Setup",
        model="SalesLineItems",
        datafield="total_price",
        account=cash_account,
        operation=0
    )

    #6
    TransactionAction.objects.create(
        name="Revenue name (investment)",
        sales_title="Investment Transaction",
        payment="Cash",
        model="SalesLineItems",
        datafield="total_price",
        account=cash_account_default,
        operation=1
    )
    TransactionAction.objects.create(
        name="Revenue name (investment)",
        sales_title="Investment Transaction",
        payment="Cash",
        model="SalesLineItems",
        datafield="total_price",
        account=interest_income,
        operation=0
    )

    #7
    TransactionAction.objects.create(
        name="Revenue name (investment)",
        sales_title="Investment Transaction",
        payment="Credit",
        model="SalesLineItems",
        datafield="total_price",
        account=account_receivables,
        operation=1
    )
    TransactionAction.objects.create(
        name="Revenue name (investment)",
        sales_title="Investment Transaction",
        payment="Credit",
        model="SalesLineItems",
        datafield="total_price",
        account=interest_income,
        operation=0
    )

    #Advance Revenue
    #8
    TransactionAction.objects.create(
        name="Advance Revenues",
        sales_title="Upfront Sales",
        payment="Cash",
        model="SalesLineItems",
        datafield="total_price",
        account=cash_account,
        operation=1
    )
    TransactionAction.objects.create(
        name="Advance Revenues",
        sales_title="Upfront Sales",
        payment="Cash",
        model="SalesLineItems",
        datafield="total_price",
        account=unearned_revenue,
        operation=0
    )

    #Cost of Sales
    #9
    TransactionAction.objects.create(
        name="Cost of Sales (Inventory)",
        expense_title="Purchase Inventory (Cash)",
        payment="Cash",
        model="Inventory",
        operation=1
    )
    TransactionAction.objects.create(
        name="Cost of Sales (Inventory)",
        expense_title="Purchase Inventory (Cash)",
        payment="Cash",
        model="ExpenseLineItem",
        datafield="total_price",
        account=cash_account,
        operation=0
    )
    TransactionAction.objects.create(
        name="Cost of Sales (Inventory)",
        expense_title="Purchase Inventory (Cash)",
        payment="Cash",
        model="ExpenseLineItem",
        datafield="total_price",
        account=inventory,
        operation=1
    )

    #10
    TransactionAction.objects.create(
        name="Cost of Sales (Inventory)",
        expense_title="Purchase Inventory (Credit)",
        payment="Credit",
        model="Inventory",
        operation=1
    )
    TransactionAction.objects.create(
        name="Cost of Sales (Inventory)",
        expense_title="Purchase Inventory (Credit)",
        payment="Credit",
        model="ExpenseLineItem",
        datafield="total_price",
        account=account_payable,
        operation=0
    )
    TransactionAction.objects.create(
        name="Cost of Sales (Inventory)",
        expense_title="Purchase Inventory (Credit)",
        payment="Credit",
        model="ExpenseLineItem",
        datafield="total_price",
        account=inventory,
        operation=1
    )    

    #Cost of Sales (Shipping Expense)
    #11
    TransactionAction.objects.create(
        name="Cost of Sales (Shipping Expenses)",
        expense_title="Shipping",
        payment="Cash",
        model="ExpenseLineItem",
        datafield="total_price",
        account=shipping_expense,
        operation=1
    )
    TransactionAction.objects.create(
        name="Cost of Sales (Shipping Expenses)",
        expense_title="Shipping",
        payment="Cash",
        model="ExpenseLineItem",
        datafield="total_price",
        account=cash_account,
        operation=0
    )
    TransactionAction.objects.create(
        name="Cost of Sales (Shipping Expenses)",
        expense_title="Shipping, Credit",
        payment="Credit",
        model="ExpenseLineItem",
        datafield="total_price",
        account=shipping_expense,
        operation=1
    )
    TransactionAction.objects.create(
        name="Cost of Sales (Shipping Expenses)",
        expense_title="Shipping, Credit",
        payment="Credit",
        model="ExpenseLineItem",
        datafield="total_price",
        account=account_payable,
        operation=0
    )


class Migration(migrations.Migration):

    dependencies = [
        ('report', '0010_auto_20231020_2046'),
    ]

    operations = [
        migrations.RunPython(seed_data),
    ]
